import * as fs from 'fs';
import * as path from 'path';
import * as chains from '../config/chains.json';

function capatalise(val: string): string {
  let lower = val.toLowerCase();
  let caped = lower[0].toUpperCase() + lower.slice(1);
  return caped;
}

function generateEnum(enumName: string, values: string[]): string {
  let enumStr = `export enum ${enumName} {\n`;
  for (const key in values) {
    enumStr += `  ${capatalise(values[key])} = '${values[key]}',\n`;
  }
  enumStr += '}\n';
  return enumStr;
}

export function generateEnumsFromJson(
  name: string,
  enumKeys: string[],
): string {
  let enumContent = `/**
 * @file Automatically generated by catalyst-channel-list.
 */\n
`;
  // Generate AMB enums:
  enumContent += generateEnum(name, enumKeys);

  return enumContent;
}

// Generate enums from imported JSON data
const ambEnums = generateEnumsFromJson(
  'ArbitraryMessagingBridge',
  Object.keys(chains),
);
// Generate enums from imported JSON data
// const chainEnums = generateEnumsFromJson("Chains", getSecondLevelKeys(chains));

// Write enums to TypeScript file
fs.writeFile(
  path.join(__dirname, '../enums/AMBs.enums.ts'),
  ambEnums,
  (err) => {
    if (err) {
      console.error(`Error writing enum file: ${err} `);
    } else {
      console.log('AMB enums generated successfully!');
    }
  },
);
